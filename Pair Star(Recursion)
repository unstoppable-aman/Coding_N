Given a string S, compute recursively a new string where identical chars that are adjacent in the original string are separated from each other by a "*".
Input format :
String S
Output format :
Modified string
Constraints :
0 <= |S| <= 1000
where |S| represents length of string S.
Sample Input 1 :
hello
Sample Output 1:
hel*lo
Sample Input 2 :
aaaa
Sample Output 2 :
a*a*a*a


PROGRAM:

#include <iostream>
#include<string.h>
using namespace std;
void pairStar(char input[]) {
    int flag=0;
    if(strlen(input)==0||strlen(input)==1)
        return;
    if(input[0]==input[1])
    {	
        
        int length=strlen(input);
        //Important step as it is a character array we have to move \0 also;
        input[length+1]='\0';
        for(int i=strlen(input)-1;i>0;i--)
            input[i+1]=input[i];
        input[1]='*';
        flag=1;
    }
    if(flag==1)
    	pairStar(input+2);
    else
        pairStar(input+1);
        

}
int main() {
   char input[100];
   cin.getline(input, 100);
   pairStar(input);
   cout << input << endl;
}
