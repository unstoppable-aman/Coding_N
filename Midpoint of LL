#include <iostream>

class Node
{
public:
	int data;
	Node *next;
	Node(int data)
	{
		this->data = data;
		this->next = NULL;
	}
};

using namespace std;
#include "solution.h"

Node *takeinput()
{
	int data;
	cin >> data;
	Node *head = NULL, *tail = NULL;
	while (data != -1)
	{
		Node *newnode = new Node(data);
		if (head == NULL)
		{
			head = newnode;
			tail = newnode;
		}
		else
		{
			tail->next = newnode;
			tail = newnode;
		}
		cin >> data;
	}
	return head;
}

********************************SOLUTION***************************************
/* lets take an example: let LL is 1->2->3->4 we use two pointers slow & fast.Intitially we put slow at head and fast at head->next.Then we move 
   slow by one position and fast by two position.*/
   
 Node *midPoint(Node *head)
{	if(head==NULL||head->next==NULL)
		return head;
	Node *slow=head;
	Node *fast=head->next;
	while(fast!=NULL){
		if(fast->next==NULL)
			return slow;
		slow=slow->next;
		fast=fast->next->next;
	}
	return slow;
}

*********************************************************************************
int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		Node *head = takeinput();
		Node *mid = midPoint(head);
		if (mid != NULL)
		{
			cout << mid->data;
		}
		cout << endl;
	}
	return 0;
}
